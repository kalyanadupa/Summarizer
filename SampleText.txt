Preface
This book provides a comprehensive introduction to the modern study of computer
algorithms. It presents many algorithms and covers them in considerable depth, yet
makes their design and analysis accessible to all levels of readers. We have tried to
keep explanations elementary without sacrificing depth of coverage or mathemati-
cal rigor.
Each chapter presents an algorithm, a design technique, an application area, or a
related topic. Algorithms are described in English and in a “pseudocode” designed
to be readable by anyone who has done a little programming. The book contains
over 230 figures illustrating how the algorithms work. Since we emphasize effi-
ciency as a design criterion, we include careful analyses of the running times of all
our algorithms.
The text is intended primarily for use in undergraduate or graduate courses in
algorithms or data structures. Because it discusses engineering issues in algorithm
design, as well as mathematical aspects, it is equally well suited for self-study by
technical professionals.
In this, the second edition, we have updated the entire book. The changes range
from the addition of new chapters to the rewriting of individual sentences.
To the teacher
This book is designed to be both versatile and complete. You will find it useful for
a variety of courses, from an undergraduate course in data structures up through
a graduate course in algorithms. Because we have provided considerably more
material than can fit in a typical one-term course, you should think of the book as
a “buffet” or “smorgasbord” from which you can pick and choose the material that
best supports the course you wish to teach.
You should find it easy to organize your course around just the chapters you
need. We have made chapters relatively self-contained, so that you need not worry
about an unexpected and unnecessary dependence of one chapter on another. Each
chapter presents the easier material first and the more difficult material later, with
xiv Preface
section boundaries marking natural stopping points. In an undergraduate course,
you might use only the earlier sections from a chapter; in a graduate course, you
might cover the entire chapter.
We have included over 920 exercises and over 140 problems. Each section ends
with exercises, and each chapter ends with problems. The exercises are generally
short questions that test basic mastery of the material. Some are simple self-check
thought exercises, whereas others are more substantial and are suitable as assigned
homework. The problems are more elaborate case studies that often introduce new
material; they typically consist of several questions that lead the student through
the steps required to arrive at a solution.
We have starred () the sections and exercises that are more suitable for graduate
students than for undergraduates. A starred section is not necessarily more diffi-
cult than an unstarred one, but it may require an understanding of more advanced
mathematics. Likewise, starred exercises may require an advanced background or
more than average creativity.
To the student
We hope that this textbook provides you with an enjoyable introduction to the
field of algorithms. We have attempted to make every algorithm accessible and
interesting. To help you when you encounter unfamiliar or difficult algorithms, we
describe each one in a step-by-step manner. We also provide careful explanations
of the mathematics needed to understand the analysis of the algorithms. If you
already have some familiarity with a topic, you will find the chapters organized so
that you can skim introductory sections and proceed quickly to the more advanced
material.
This is a large book, and your class will probably cover only a portion of its
material. We have tried, however, to make this a book that will be useful to you
now as a course textbook and also later in your career as a mathematical desk
reference or an engineering handbook.
What are the prerequisites for reading this book?
• You should have some programming experience. In particular, you should un-
derstand recursive procedures and simple data structures such as arrays and
linked lists.
• You should have some facility with proofs by mathematical induction. A few
portions of the book rely on some knowledge of elementary calculus. Beyond
that, Parts I and VIII of this book teach you all the mathematical techniques you
will need.
Preface xv
To the professional
The wide range of topics in this book makes it an excellent handbook on algo-
rithms. Because each chapter is relatively self-contained, you can focus in on the
topics that most interest you.
Most of the algorithms we discuss have great practical utility. We therefore
address implementation concerns and other engineering issues. We often provide
practical alternatives to the few algorithms that are primarily of theoretical interest.
If you wish to implement any of the algorithms, you will find the translation of
our pseudocode into your favorite programming language a fairly straightforward
task. The pseudocode is designed to present each algorithm clearly and succinctly.
Consequently, we do not address error-handling and other software-engineering is-
sues that require specific assumptions about your programming environment. We
attempt to present each algorithm simply and directly without allowing the idiosyn-
crasies of a particular programming language to obscure its essence.
To our colleagues
We have supplied an extensive bibliography and pointers to the current literature.
Each chapter ends with a set of “chapter notes” that give historical details and
references. The chapter notes do not provide a complete reference to the whole
field of algorithms, however. Though it may be hard to believe for a book of this
size, many interesting algorithms could not be included due to lack of space.
Despite myriad requests from students for solutions to problems and exercises,
we have chosen as a matter of policy not to supply references for problems and
exercises, to remove the temptation for students to look up a solution rather than to
find it themselves.
Changes for the second edition
What has changed between the first and second editions of this book? Depending
on how you look at it, either not much or quite a bit.
A quick look at the table of contents shows that most of the first-edition chapters
and sections appear in the second edition. We removed two chapters and a handful
of sections, but we have added three new chapters and four new sections apart from
these new chapters. If you were to judge the scope of the changes by the table of
contents, you would likely conclude that the changes were modest.
The changes go far beyond what shows up in the table of contents, however.
In no particular order, here is a summary of the most significant changes for the
second edition:
xvi Preface
• Cliff Stein was added as a coauthor.
• Errors have been corrected. How many errors? Let’s just say several.
• There are three new chapters:
• Chapter 1 discusses the role of algorithms in computing.
• Chapter 5 covers probabilistic analysis and randomized algorithms. As in
the first edition, these topics appear throughout the book.
• Chapter 29 is devoted to linear programming.
• Within chapters that were carried over from the first edition, there are new sec-
tions on the following topics:
• perfect hashing (Section 11.5),
• two applications of dynamic programming (Sections 15.1 and 15.5), and
• approximation algorithms that use randomization and linear programming
(Section 35.4).
• To allow more algorithms to appear earlier in the book, three of the chapters on
mathematical background have been moved from Part I to the Appendix, which
is Part VIII.
• There are over 40 new problems and over 185 new exercises.
• We have made explicit the use of loop invariants for proving correctness. Our
first loop invariant appears in Chapter 2, and we use them a couple of dozen
times throughout the book.
• Many of the probabilistic analyses have been rewritten. In particular, we use in
a dozen places the technique of “indicator random variables,” which simplify
probabilistic analyses, especially when random variables are dependent.
• We have expanded and updated the chapter notes and bibliography. The bibli-
ography has grown by over 50%, and we have mentioned many new algorithmic
results that have appeared subsequent to the printing of the first edition.
We have also made the following changes:
• The chapter on solving recurrences no longer contains the iteration method. In-
stead, in Section 4.2, we have “promoted” recursion trees to constitute a method
in their own right. We have found that drawing out recursion trees is less error-
prone than iterating recurrences. We do point out, however, that recursion trees
are best used as a way to generate guesses that are then verified via the substi-
tution method.
Preface xvii
• The partitioning method used for quicksort (Section 7.1) and the expected
linear-time order-statistic algorithm (Section 9.2) is different. We now use the
method developed by Lomuto, which, along with indicator random variables,
allows for a somewhat simpler analysis. The method from the first edition, due
to Hoare, appears as a problem in Chapter 7.
• We have modified the discussion of universal hashing in Section 11.3.3 so that
it integrates into the presentation of perfect hashing.
• There is a much simpler analysis of the height of a randomly built binary search
tree in Section 12.4.
• The discussions on the elements of dynamic programming (Section 15.3) and
the elements of greedy algorithms (Section 16.2) are significantly expanded.
The exploration of the activity-selection problem, which starts off the greedy-
algorithms chapter, helps to clarify the relationship between dynamic program-
ming and greedy algorithms.
• We have replaced the proof of the running time of the disjoint-set-union data
structure in Section 21.4 with a proof that uses the potential method to derive a
tight bound.
• The proof of correctness of the algorithm for strongly connected components
in Section 22.5 is simpler, clearer, and more direct.
• Chapter 24, on single-source shortest paths, has been reorganized to move
proofs of the essential properties to their own section. The new organization
allows us to focus earlier on algorithms.
• Section 34.5 contains an expanded overview of NP-completeness as well as new
NP-completeness proofs for the hamiltonian-cycle and subset-sum problems.
Finally, virtually every section has been edited to correct, simplify, and clarify
explanations and proofs.
Web site
Another change from the first edition is that this book now has its own web site:
http://mitpress.mit.edu/algorithms/. You can use the web site to
report errors, obtain a list of known errors, or make suggestions; we would like to
hear from you. We particularly welcome ideas for new exercises and problems, but
please include solutions.
We regret that we cannot personally respond to all comments.
xviii Preface
Acknowledgments for the first edition
Many friends and colleagues have contributed greatly to the quality of this book.
We thank all of you for your help and constructive criticisms.
MIT’s Laboratory for Computer Science has provided an ideal working environ-
ment. Our colleagues in the laboratory’s Theory of Computation Group have been
particularly supportive and tolerant of our incessant requests for critical appraisal of
chapters. We specifically thank Baruch Awerbuch, Shafi Goldwasser, Leo Guibas,
Tom Leighton, Albert Meyer, David Shmoys, and ´Eva Tardos. Thanks to William
Ang, Sally Bemus, Ray Hirschfeld, and Mark Reinhold for keeping our machines
(DEC Microvaxes, Apple Macintoshes, and Sun Sparcstations) running and for re-
compiling TEX whenever we exceeded a compile-time limit. Thinking Machines
Corporation provided partial support for Charles Leiserson to work on this book
during a leave of absence from MIT.
Many colleagues have used drafts of this text in courses at other schools. They
have suggested numerous corrections and revisions. We particularly wish to thank
Richard Beigel, Andrew Goldberg, Joan Lucas, Mark Overmars, Alan Sherman,
and Diane Souvaine.
Many teaching assistants in our courses have made significant contributions to
the development of this material. We especially thank Alan Baratz, Bonnie Berger,
Aditi Dhagat, Burt Kaliski, Arthur Lent, Andrew Moulton, Marios Papaefthymiou,
Cindy Phillips, Mark Reinhold, Phil Rogaway, Flavio Rose, Arie Rudich, Alan
Sherman, Cliff Stein, Susmita Sur, Gregory Troxel, and Margaret Tuttle.
Additional valuable technical assistance was provided by many individuals.
Denise Sergent spent many hours in the MIT libraries researching bibliographic
references. Maria Sensale, the librarian of our reading room, was always cheerful
and helpful. Access to Albert Meyer’s personal library saved many hours of li-
brary time in preparing the chapter notes. Shlomo Kipnis, Bill Niehaus, and David
Wilson proofread old exercises, developed new ones, and wrote notes on their so-
lutions. Marios Papaefthymiou and Gregory Troxel contributed to the indexing.
Over the years, our secretaries Inna Radzihovsky, Denise Sergent, Gayle Sherman,
and especially Be Blackburn provided endless support in this project, for which we
thank them.
Many errors in the early drafts were reported by students. We particularly
thank Bobby Blumofe, Bonnie Eisenberg, Raymond Johnson, John Keen, Richard
Lethin, Mark Lillibridge, John Pezaris, Steve Ponzio, and Margaret Tuttle for their
careful readings.
Colleagues have also provided critical reviews of specific chapters, or informa-
tion on specific algorithms, for which we are grateful. We especially thank Bill
Aiello, Alok Aggarwal, Eric Bach, Vasˇek Chva´tal, Richard Cole, Johan Hastad,
Alex Ishii, David Johnson, Joe Kilian, Dina Kravets, Bruce Maggs, Jim Orlin,
James Park, Thane Plambeck, Hershel Safer, Jeff Shallit, Cliff Stein, Gil Strang,
Preface xix
Bob Tarjan, and Paul Wang. Several of our colleagues also graciously supplied
us with problems; we particularly thank Andrew Goldberg, Danny Sleator, and
Umesh Vazirani.
It has been a pleasure working with The MIT Press and McGraw-Hill in the
development of this text. We especially thank Frank Satlow, Terry Ehling, Larry
Cohen, and Lorrie Lejeune of The MIT Press and David Shapiro of McGraw-Hill
for their encouragement, support, and patience. We are particularly grateful to
Larry Cohen for his outstanding copyediting.
Acknowledgments for the second edition
When we asked Julie Sussman, P.P.A., to serve as a technical copyeditor for the
second edition, we did not know what a good deal we were getting. In addition
to copyediting the technical content, Julie enthusiastically edited our prose. It is
humbling to think of how many errors Julie found in our earlier drafts, though
considering how many errors she found in the first edition (after it was printed,
unfortunately), it is not surprising. Moreover, Julie sacrificed her own schedule
to accommodate ours—she even brought chapters with her on a trip to the Virgin
Islands! Julie, we cannot thank you enough for the amazing job you did.
The work for the second edition was done while the authors were members of
the Department of Computer Science at Dartmouth College and the Laboratory for
Computer Science at MIT. Both were stimulating environments in which to work,
and we thank our colleagues for their support.
Friends and colleagues all over the world have provided suggestions and opin-
ions that guided our writing. Many thanks to Sanjeev Arora, Javed Aslam, Guy
Blelloch, Avrim Blum, Scot Drysdale, Hany Farid, Hal Gabow, Andrew Goldberg,
David Johnson, Yanlin Liu, Nicolas Schabanel, Alexander Schrijver, Sasha Shen,
David Shmoys, Dan Spielman, Gerald Jay Sussman, Bob Tarjan, Mikkel Thorup,
and Vijay Vazirani.
Many teachers and colleagues have taught us a great deal about algorithms. We
particularly acknowledge our teachers Jon L. Bentley, Bob Floyd, Don Knuth,
Harold Kuhn, H. T. Kung, Richard Lipton, Arnold Ross, Larry Snyder, Michael I.
Shamos, David Shmoys, Ken Steiglitz, Tom Szymanski, ´Eva Tardos, Bob Tarjan,
and Jeffrey Ullman.
We acknowledge the work of the many teaching assistants for the algorithms
courses at MIT and Dartmouth, including Joseph Adler, Craig Barrack, Bobby
Blumofe, Roberto De Prisco, Matteo Frigo, Igal Galperin, David Gupta, Raj D.
Iyer, Nabil Kahale, Sarfraz Khurshid, Stavros Kolliopoulos, Alain Leblanc, Yuan
Ma, Maria Minkoff, Dimitris Mitsouras, Alin Popescu, Harald Prokop, Sudipta
Sengupta, Donna Slonim, Joshua A. Tauber, Sivan Toledo, Elisheva Werner-Reiss,
Lea Wittie, Qiang Wu, and Michael Zhang.
xx Preface
Computer support was provided by William Ang, Scott Blomquist, and Greg
Shomo at MIT and by Wayne Cripps, John Konkle, and Tim Tregubov at Dart-
mouth. Thanks also to Be Blackburn, Don Dailey, Leigh Deacon, Irene Sebeda,
and Cheryl Patton Wu at MIT and to Phyllis Bellmore, Kelly Clark, Delia Mauceli,
Sammie Travis, Deb Whiting, and Beth Young at Dartmouth for administrative
support. Michael Fromberger, Brian Campbell, Amanda Eubanks, Sung Hoon
Kim, and Neha Narula also provided timely support at Dartmouth.
Many people were kind enough to report errors in the first edition. We thank
the following people, each of whom was the first to report an error from the first
edition: Len Adleman, Selim Akl, Richard Anderson, Juan Andrade-Cetto, Gre-
gory Bachelis, David Barrington, Paul Beame, Richard Beigel, Margrit Betke, Alex
Blakemore, Bobby Blumofe, Alexander Brown, Xavier Cazin, Jack Chan, Richard
Chang, Chienhua Chen, Ien Cheng, Hoon Choi, Drue Coles, Christian Collberg,
George Collins, Eric Conrad, Peter Csaszar, Paul Dietz, Martin Dietzfelbinger,
Scot Drysdale, Patricia Ealy, Yaakov Eisenberg, Michael Ernst, Michael For-
mann, Nedim Fresko, Hal Gabow, Marek Galecki, Igal Galperin, Luisa Gargano,
John Gately, Rosario Genario, Mihaly Gereb, Ronald Greenberg, Jerry Gross-
man, Stephen Guattery, Alexander Hartemik, Anthony Hill, Thomas Hofmeister,
Mathew Hostetter, Yih-Chun Hu, Dick Johnsonbaugh, Marcin Jurdzinki, Nabil
Kahale, Fumiaki Kamiya, Anand Kanagala, Mark Kantrowitz, Scott Karlin, Dean
Kelley, Sanjay Khanna, Haluk Konuk, Dina Kravets, Jon Kroger, Bradley Kusz-
maul, Tim Lambert, Hang Lau, Thomas Lengauer, George Madrid, Bruce Maggs,
Victor Miller, Joseph Muskat, Tung Nguyen, Michael Orlov, James Park, Seongbin
Park, Ioannis Paschalidis, Boaz Patt-Shamir, Leonid Peshkin, Patricio Poblete, Ira
Pohl, Stephen Ponzio, Kjell Post, Todd Poynor, Colin Prepscius, Sholom Rosen,
Dale Russell, Hershel Safer, Karen Seidel, Joel Seiferas, Erik Seligman, Stanley
Selkow, Jeffrey Shallit, Greg Shannon, Micha Sharir, Sasha Shen, Norman Shul-
man, Andrew Singer, Daniel Sleator, Bob Sloan, Michael Sofka, Volker Strumpen,
Lon Sunshine, Julie Sussman, Asterio Tanaka, Clark Thomborson, Nils Thomme-
sen, Homer Tilton, Martin Tompa, Andrei Toom, Felzer Torsten, Hirendu Vaishnav,
M. Veldhorst, Luca Venuti, Jian Wang, Michael Wellman, Gerry Wiener, Ronald
Williams, David Wolfe, Jeff Wong, Richard Woundy, Neal Young, Huaiyuan Yu,
Tian Yuxing, Joe Zachary, Steve Zhang, Florian Zschoke, and Uri Zwick.
Many of our colleagues provided thoughtful reviews or filled out a long sur-
vey. We thank reviewers Nancy Amato, Jim Aspnes, Kevin Compton, William
Evans, Peter Gacs, Michael Goldwasser, Andrzej Proskurowski, Vijaya Ramachan-
dran, and John Reif. We also thank the following people for sending back the
survey: James Abello, Josh Benaloh, Bryan Beresford-Smith, Kenneth Blaha,
Hans Bodlaender, Richard Borie, Ted Brown, Domenico Cantone, M. Chen,
Robert Cimikowski, William Clocksin, Paul Cull, Rick Decker, Matthew Dick-
erson, Robert Douglas, Margaret Fleck, Michael Goodrich, Susanne Hambrusch,
Preface xxi
Dean Hendrix, Richard Johnsonbaugh, Kyriakos Kalorkoti, Srinivas Kankanahalli,
Hikyoo Koh, Steven Lindell, Errol Lloyd, Andy Lopez, Dian Rae Lopez, George
Lucker, David Maier, Charles Martel, Xiannong Meng, David Mount, Alberto Poli-
criti, Andrzej Proskurowski, Kirk Pruhs, Yves Robert, Guna Seetharaman, Stanley
Selkow, Robert Sloan, Charles Steele, Gerard Tel, Murali Varanasi, Bernd Walter,
and Alden Wright. We wish we could have carried out all your suggestions. The
only problem is that if we had, the second edition would have been about 3000
pages long!
The second edition was produced in LATEX 2ε. Michael Downes converted the
LATEX macros from “classic” LATEX to LATEX 2ε, and he converted the text files to
use these new macros. David Jones also provided LATEX 2ε support. Figures for the
second edition were produced by the authors using MacDraw Pro. As in the first
edition, the index was compiled using Windex, a C program written by the authors,
and the bibliography was prepared using BIBTEX. Ayorkor Mills-Tettey and Rob
Leathern helped convert the figures to MacDraw Pro, and Ayorkor also checked
our bibliography.
As it was in the first edition, working with The MIT Press and McGraw-Hill
has been a delight. Our editors, Bob Prior of The MIT Press and Betsy Jones of
McGraw-Hill, put up with our antics and kept us going with carrots and sticks.
Finally, we thank our wives—Nicole Cormen, Gail Rivest, and Rebecca Ivry—
our children—Ricky, William, and Debby Leiserson; Alex and Christopher Rivest;
and Molly, Noah, and Benjamin Stein—and our parents—Renee and Perry
Cormen, Jean and Mark Leiserson, Shirley and Lloyd Rivest, and Irene and Ira
Stein—for their love and support during the writing of this book. The patience
and encouragement of our families made this project possible. We affectionately
dedicate this book to them.
THOMAS H. CORMEN Hanover, New Hampshire
CHARLES E. LEISERSON Cambridge, Massachusetts
RONALD L. RIVEST Cambridge, Massachusetts
CLIFFORD STEIN Hanover, New Hampshire
May 2001
